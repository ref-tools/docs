{
  "openapi": "3.1.0",
  "info": {
    "title": "Ref API",
    "description": "Documentation search and retrieval API for AI agents and developers",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://ref.tools/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/search": {
      "post": {
        "summary": "Search Documentation",
        "description": "Search through indexed documentation using natural language queries",
        "tags": ["Search"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "402": {
            "description": "Insufficient credits",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/read-url": {
      "post": {
        "summary": "Read URL Content",
        "description": "Extract and process content from any URL",
        "tags": ["Content"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReadUrlRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "URL content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/web-search": {
      "post": {
        "summary": "Web Search",
        "description": "Search the web for real-time information",
        "tags": ["Search"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebSearchRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Web search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebSearchResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "SearchRequest": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query in natural language"
          },
          "maxResults": {
            "type": "integer",
            "minimum": 1,
            "maximum": 50,
            "default": 10,
            "description": "Maximum number of results to return"
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Specific documentation sources to search"
          },
          "includeContent": {
            "type": "boolean",
            "default": false,
            "description": "Include full content in results"
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of matching results"
          },
          "searchTime": {
            "type": "integer",
            "description": "Response time in milliseconds"
          },
          "creditsUsed": {
            "type": "integer",
            "description": "Credits consumed by this request"
          },
          "requestId": {
            "type": "string",
            "description": "Unique request identifier"
          }
        }
      },
      "SearchResult": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Document title"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Source URL"
          },
          "excerpt": {
            "type": "string",
            "description": "Relevant excerpt from the document"
          },
          "score": {
            "type": "number",
            "minimum": 0,
            "maximum": 1,
            "description": "Relevance score"
          },
          "source": {
            "type": "string",
            "description": "Documentation source name"
          },
          "content": {
            "type": "string",
            "description": "Full content (when includeContent=true)"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the document"
          }
        }
      },
      "ReadUrlRequest": {
        "type": "object",
        "required": ["url"],
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL to read and extract content from"
          },
          "format": {
            "type": "string",
            "enum": ["markdown", "html", "text"],
            "default": "markdown",
            "description": "Preferred output format"
          },
          "extractLinks": {
            "type": "boolean",
            "default": false,
            "description": "Extract links from the content"
          }
        }
      },
      "ReadUrlResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "description": "The URL that was processed"
          },
          "title": {
            "type": "string",
            "description": "Page title"
          },
          "content": {
            "type": "string",
            "description": "Extracted content"
          },
          "metadata": {
            "type": "object",
            "description": "Page metadata"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uri"
            },
            "description": "Extracted links (when extractLinks=true)"
          },
          "creditsUsed": {
            "type": "integer",
            "description": "Credits consumed by this request"
          }
        }
      },
      "WebSearchRequest": {
        "type": "object",
        "required": ["query"],
        "properties": {
          "query": {
            "type": "string",
            "description": "Web search query"
          },
          "maxResults": {
            "type": "integer",
            "minimum": 1,
            "maximum": 20,
            "default": 5,
            "description": "Maximum number of results"
          },
          "freshness": {
            "type": "string",
            "enum": ["day", "week", "month", "year"],
            "description": "Freshness filter for results"
          }
        }
      },
      "WebSearchResponse": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebSearchResult"
            }
          },
          "searchTime": {
            "type": "integer",
            "description": "Response time in milliseconds"
          },
          "creditsUsed": {
            "type": "integer",
            "description": "Credits consumed by this request"
          }
        }
      },
      "WebSearchResult": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Page title"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "Page URL"
          },
          "snippet": {
            "type": "string",
            "description": "Page snippet/description"
          },
          "publishedDate": {
            "type": "string",
            "format": "date-time",
            "description": "Publication date"
          },
          "source": {
            "type": "string",
            "description": "Source domain"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type"
          },
          "message": {
            "type": "string",
            "description": "Human-readable error message"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "description": "Bearer token authentication using your Ref API key"
      }
    }
  }
}